version: "3.9"

services:
  #    nginx:
  #        build:
  #            context: .
  #        image: nginx:latest
  #        restart: always
  #        networks:
  #            app_net:
  #                ipv4_address: 172.88.88.10
  #        ports:
  #            - "8801:80"
  #        volumes:
  #            - .:/var/www/html/
  #            - ./docker/default.conf:/etc/nginx/conf.d/default.conf
  #        links:
  #            - php
  #    php:
  #        image: php822fpm
  #        build: docker/php8.2.2/
  #        #            context: .
  #        #            dockerfile: ./docker/php8.2.2/Dockerfile
  #        restart: always
  #        volumes:
  #            - .:/var/www/html/
  #            - ./docker/php8.2.2/php.ini:/usr/local/etc/php/php.ini
  #            - ./docker/php8.2.2/php-fpm.conf:/usr/local/etc/php-fpm.conf
  #            - ./docker/php8.2.2/www.conf:/usr/local/etc/php-fpm.d/www.conf
  #        networks:
  #            app_net:
  #                ipv4_address: 172.88.88.20

  redis:
    image: redis/redis-stack:latest
    restart: always
    ports:
      - "16379:6379"
    networks:
      app_net:
        ipv4_address: 172.88.88.8

  postgresql:
    image: postgres:latest
    volumes:
      - ./docker/data/postgres_data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'fuck123sql'
    ports:
      - "15432:5432"
    networks:
      app_net:
        ipv4_address: 172.88.88.18

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: 'me@me.me'
      PGADMIN_DEFAULT_PASSWORD: 'fuck123sql'
    ports:
      - "8543:80"
    networks:
      app_net:
        ipv4_address: 172.88.88.19

  #    mysql:
  #        image: mysql/mysql-server:latest
  #        #        volumes:
  #        #            - ./docker/mysql-data:/var/lib/mysql
  #        restart: always
  #        environment:
  #            MYSQL_ROOT_PASSWORD: 'fuck123sql'
  #            MYSQL_ROOT_HOST: '0.0.0.0'
  #        ports:
  #            - "3306:3306"
  #        networks:
  #            app_net:
  #                ipv4_address: 172.88.88.28

  #    zinc:
  #        image: public.ecr.aws/zinclabs/zinc:latest
  #        restart: always
  #        environment:
  #            ZINC_FIRST_ADMIN_USER: 'root'
  #            ZINC_FIRST_ADMIN_PASSWORD: 'fuck123sql'
  #        ports:
  #            - "4080:4080"
  #        networks:
  #            app_net:
  #                ipv4_address: 172.88.88.38
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    #    container_name: es
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - ./docker/data/es-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      app_net:
        ipv4_address: 172.88.88.58

  kibana:
    #    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.6.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      app_net:
        ipv4_address: 172.88.88.68

  #  Etcd:
  #    image: bitnami/etcd:latest
  #    environment:
  #      - ALLOW_NONE_AUTHENTICATION=yes
  #      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
  #    ports:
  #      - "2379:2379"
  #      - "2380:2380"
  #    networks:
  #      app_net:
  #        ipv4_address: 172.88.88.78

  nacos:
    image: nacos/nacos-server:latest
    container_name: nacos
    ports:
      - "8848:8848"
    environment:
      MODE: standalone
    networks:
      app_net:
        ipv4_address: 172.88.88.88


volumes:
  es_data:
    driver: local

networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: 172.88.88.0/24
